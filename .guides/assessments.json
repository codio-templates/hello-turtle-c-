[
 {
  "type": "multiple-choice",
  "taskId": "multiple-choice-3602415844",
  "source": {
   "name": "C++ Printing: Reading Question 1",
   "showName": true,
   "instructions": "What is wrong with the code snippet below?\n```\ncout << Hello world!;\n```",
   "multipleResponse": false,
   "answers": [
    {
     "_id": "139caba8-e8bd-61a0-7a39-0c25195e9b81",
     "correct": false,
     "answer": "Capitalize `cout`"
    },
    {
     "_id": "bfe87d7a-5096-b0c0-6dbe-988178d48aa2",
     "correct": false,
     "answer": "Use `>>` instead of `<<`"
    },
    {
     "_id": "c6d72e82-b2bf-1931-2c1e-cdcd45608314",
     "correct": true,
     "answer": "Missing `\" \"` around `Hello world!`"
    },
    {
     "_id": "7b69ce64-fca5-4e14-8006-27a8e1a56872",
     "correct": false,
     "answer": "Remove the `;` at the end of the code"
    }
   ],
   "guidance": "Quotation marks are needed around your desired output in order for it to print.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "points": 1,
   "incorrectPoints": 0,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Multiple Choice"
     },
     {
      "name": "Content",
      "value": "Output"
     },
     {
      "name": "Programming Language",
      "value": "C++"
     },
     {
      "name": "Category",
      "value": "Printing"
     }
    ],
    "files": [
     "code/fundamentals/exercise1.cpp",
     "code/fundamentals/tryit1.cpp"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/fundamentals/exercise1.cpp"
     }
    ]
   },
   "bloomsObjectiveLevel": "1",
   "learningObjectives": "Use the cout command to write text to the console"
  }
 },
 {
  "type": "multiple-choice",
  "taskId": "multiple-choice-4156149016",
  "source": {
   "name": "C++ Printing: Reading Question 2",
   "showName": true,
   "instructions": "Which of the following commands adds a newline character?",
   "multipleResponse": false,
   "answers": [
    {
     "_id": "511429d1-04e7-fb14-8bca-4e2a57b4c0b5",
     "correct": false,
     "answer": "`cout << \"Hello\";`"
    },
    {
     "_id": "6002f3ab-939e-2597-75ad-0bb122ac51bf",
     "correct": false,
     "answer": "`cout << \"Hello\" << endl;`"
    },
    {
     "_id": "52cae018-0d06-be3a-99b4-7e159fb9d4cc",
     "correct": false,
     "answer": "`cout << \"Hello\";`\n`cout << endl;`"
    },
    {
     "_id": "a798c604-c627-4f2a-21c8-1c79811217cb",
     "correct": true,
     "answer": "Both choices #2 and #3 are correct."
    }
   ],
   "guidance": "Both #2 and #3 will produce the same output. `Hello` will be printed followed by a newline character.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "points": 1,
   "incorrectPoints": 0,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Multiple Choice"
     },
     {
      "name": "Content",
      "value": "Newline"
     },
     {
      "name": "Programming Language",
      "value": "C++"
     },
     {
      "name": "Category",
      "value": "Printing"
     }
    ],
    "files": [
     "code/fundamentals/exercise1.cpp",
     "code/fundamentals/tryit2.cpp"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/fundamentals/exercise1.cpp"
     }
    ]
   },
   "bloomsObjectiveLevel": "1",
   "learningObjectives": "Add a newline character by using the endl command"
  }
 },
 {
  "type": "fill-in-the-blanks",
  "taskId": "fill-in-the-blanks-1342485909",
  "source": {
   "name": "C++ Printing: Reading Question 3",
   "showName": true,
   "instructions": "Fill in the blanks below about comments in C++.",
   "text": "In C++, the `//` symbol means a <<<single-line>>> comment, and the `/*` and `*/` symbols mean a <<<multi-line>>> comment.",
   "guidance": "In C++, the `//` symbol is used for a single-line comment. The comment begins at the `//` and goes on until the end of the line. The `/*` and `*/` symbols are used for multi-line comments. You must start with the `/*` and end with the `*/`. Everything between the start and end symbols will be considered the comment.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "points": 1,
   "showValues": true,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Fill in the Blanks"
     },
     {
      "name": "Content",
      "value": "Comments"
     },
     {
      "name": "Programming Language",
      "value": "C++"
     },
     {
      "name": "Category",
      "value": "Printing"
     }
    ],
    "files": [
     "code/fundamentals/exercise1.cpp",
     "code/fundamentals/comments.cpp"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/fundamentals/exercise1.cpp"
     }
    ]
   },
   "bloomsObjectiveLevel": "1",
   "learningObjectives": "Create single-line and multi-line comments by using // and /* */ respectively",
   "tokens": {
    "blank": [
     "single-line",
     "multi-line"
    ],
    "text": [
     "In C++, the `//` symbol means a ",
     0,
     " comment, and the `/*` and `*/` symbols mean a ",
     0,
     " comment."
    ]
   }
  }
 },
 {
  "type": "multiple-choice",
  "taskId": "multiple-choice-379797555",
  "source": {
   "name": "C++ Print Statement",
   "showName": true,
   "instructions": "What does the `cout <<` statement do?",
   "multipleResponse": false,
   "answers": [
    {
     "_id": "5f7329ce-e8e0-36e5-9e19-874eea666278",
     "correct": false,
     "answer": "Sends your output to the printer"
    },
    {
     "_id": "265cd53b-9969-dc24-5318-508a579da1b5",
     "correct": false,
     "answer": "Sends your output to a file"
    },
    {
     "_id": "b4cefead-9d28-99a4-b004-13b7415792ca",
     "correct": true,
     "answer": "Sends your output to the screen"
    },
    {
     "_id": "8b654324-bde6-02db-5fe4-57cc0f6dc58a",
     "correct": false,
     "answer": "Sends your output to the compiler"
    }
   ],
   "guidance": "The `cout <<` command sends your output to your computer's default output which is the computer console or terminal.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "points": 1,
   "incorrectPoints": 0,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Multiple Choice"
     },
     {
      "name": "Content",
      "value": "Output"
     },
     {
      "name": "Programming Language",
      "value": "C++"
     },
     {
      "name": "Category",
      "value": "Printing"
     }
    ],
    "files": [
     "code/fundamentals/exercise1.cpp",
     "code/fundamentals/comments.cpp"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/fundamentals/exercise1.cpp"
     }
    ]
   },
   "bloomsObjectiveLevel": "1",
   "learningObjectives": "Use the cout command to write text to the console"
  }
 },
 {
  "type": "fill-in-the-blanks",
  "taskId": "fill-in-the-blanks-761067318",
  "source": {
   "name": "C++ Printing with the Newline Character",
   "showName": true,
   "instructions": "Fill in the blanks with the missing commands that will print the text `Hi!` **with** a newline character?",
   "text": "`cout << <<<\"Hi!\">>> << <<<endl;>>>`",
   "guidance": "The `\"Hi!\"` will print the text `Hi!` and the `endl;` will add a newline character. **Don't forget to include the `;` after `endl`.**",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "points": 1,
   "showValues": false,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Fill in the Blanks"
     },
     {
      "name": "Content",
      "value": "Newline"
     },
     {
      "name": "Programming Language",
      "value": "C++"
     },
     {
      "name": "Category",
      "value": "Printing"
     }
    ],
    "files": [
     "code/fundamentals/exercise1.cpp",
     "code/fundamentals/comments.cpp"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/fundamentals/exercise1.cpp"
     }
    ]
   },
   "bloomsObjectiveLevel": "3",
   "learningObjectives": "Add a newline character by using the endl command",
   "tokens": {
    "blank": [
     "\"Hi!\"",
     "endl;"
    ],
    "text": [
     "`cout << ",
     0,
     " << ",
     0,
     "`"
    ]
   }
  }
 },
 {
  "type": "multiple-choice",
  "taskId": "multiple-choice-3689792657",
  "source": {
   "name": "C++ Variables",
   "showName": true,
   "instructions": "Select all of the properties of a variable below that **do not** change?",
   "multipleResponse": true,
   "answers": [
    {
     "_id": "754b67fa-0d9f-344a-fc5b-74e9b787b333",
     "correct": true,
     "answer": "data type"
    },
    {
     "_id": "87da7ca7-54c4-65cc-7f0d-399abdae4939",
     "correct": true,
     "answer": "name"
    },
    {
     "_id": "b219e8c9-a098-4be7-b75b-110a99dd3892",
     "correct": false,
     "answer": "value"
    }
   ],
   "guidance": "For each variable, the data type and name of the variable never change. The value can be re-assigned or changed as many times as you want!",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "points": 1,
   "incorrectPoints": 0,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Multiple Choice"
     },
     {
      "name": "Content",
      "value": "Variable Types and Properties"
     },
     {
      "name": "Programming Language",
      "value": "C++"
     },
     {
      "name": "Category",
      "value": "Variables"
     }
    ],
    "files": [
     "code/fundamentals/variableval.cpp",
     "code/fundamentals/variabletypes.cpp",
     "code/fundamentals/comments.cpp"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/fundamentals/variableval.cpp"
     }
    ]
   },
   "bloomsObjectiveLevel": "1",
   "learningObjectives": "Understand the rules of naming a variable"
  }
 },
 {
  "type": "multiple-choice",
  "taskId": "multiple-choice-2851726778",
  "source": {
   "name": "C++ Integers",
   "showName": true,
   "instructions": "Which of the following values for `number` will produce the output `1000000` when printed using `cout << number << endl;`?",
   "multipleResponse": true,
   "answers": [
    {
     "_id": "7a34cee1-497f-a464-faf5-e49898304872",
     "correct": false,
     "answer": "`int number = \"1000000\";`"
    },
    {
     "_id": "ae8dada4-64a7-a18c-287c-4c6e6ff7aa31",
     "correct": true,
     "answer": "`int number = 1000000;`"
    },
    {
     "_id": "939ab7fb-1a1d-b6fd-3abd-a5a66b51dc35",
     "correct": false,
     "answer": "`int number = 1,000,000;`"
    },
    {
     "_id": "b4a82f74-739b-c3e2-b0bc-c4bdccb18448",
     "correct": false,
     "answer": "`int number = 01000000;`"
    }
   ],
   "guidance": "Only choice #2 is correct. Choices #1 and #3 will result in an error message and choice #4 will output `262144`.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "points": 1,
   "incorrectPoints": 0,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Multiple Choice"
     },
     {
      "name": "Content",
      "value": "Integers"
     },
     {
      "name": "Programming Language",
      "value": "C++"
     },
     {
      "name": "Category",
      "value": "Variables"
     }
    ],
    "files": [
     "code/fundamentals/variableval.cpp",
     "code/fundamentals/integer.cpp"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/fundamentals/variableval.cpp"
     }
    ]
   },
   "bloomsObjectiveLevel": "3",
   "learningObjectives": "Assign/overwrite a value to a variable"
  }
 },
 {
  "type": "fill-in-the-blanks",
  "taskId": "fill-in-the-blanks-3109256444",
  "source": {
   "name": "C++ Numbers: Int vs. Double",
   "showName": true,
   "instructions": "Fill in the following with the appropriate vocabulary to explain the difference between a double and an int.",
   "text": "A <<<double>>> is a <<<floating point number>>> meaning it has a <<<decimal>>>, where an <<<int>>> is a <<<whole number>>> meaning it does not have a decimal.",
   "guidance": "A `double` is a floating point number or a rational number meaning it has a decimal or represents a fraction, where an `int` (short for integer) is a whole number meaning it does not have a decimal.\n\nBoth can be positive or negative!",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "points": 1,
   "showValues": true,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Fill in the Blanks"
     },
     {
      "name": "Content",
      "value": "Doubles & Floats"
     },
     {
      "name": "Programming Language",
      "value": "C++"
     },
     {
      "name": "Category",
      "value": "Variables"
     }
    ],
    "files": [
     "code/fundamentals/double.cpp"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/fundamentals/double.cpp"
     }
    ]
   },
   "bloomsObjectiveLevel": "2",
   "learningObjectives": "Understand four basic data types: integers (ints), floats, boolean, and strings",
   "tokens": {
    "blank": [
     "double",
     "floating point number",
     "decimal",
     "int",
     "whole number"
    ],
    "text": [
     "A ",
     0,
     " is a ",
     0,
     " meaning it has a ",
     0,
     ", where an ",
     0,
     " is a ",
     0,
     " meaning it does not have a decimal."
    ]
   }
  }
 },
 {
  "type": "multiple-choice",
  "taskId": "multiple-choice-3639612203",
  "source": {
   "name": "C++ Boolean",
   "showName": true,
   "instructions": "What is the general rule for boolean values in C++?",
   "multipleResponse": false,
   "answers": [
    {
     "_id": "f275bdfe-b626-efbb-7fdb-931d8e798a54",
     "correct": true,
     "answer": "Boolean values are case sensitive and must be lowercase."
    },
    {
     "_id": "ed2ef39e-e321-35ca-b438-bfd4c53c2f19",
     "correct": false,
     "answer": "Boolean values are not case sensitive and can be either uppercase or lowercase."
    },
    {
     "_id": "a293765b-c55e-8803-a2c5-71b0dba928ec",
     "correct": false,
     "answer": "Boolean values are case sensitive and must be uppercase."
    },
    {
     "_id": "8cd1451e-24f0-ae9c-05a3-f436ed7e6180",
     "correct": false,
     "answer": "Boolean values are case sensitive and must be all capitalized."
    }
   ],
   "guidance": "Boolean values in C++ are case sensitive and must be in all lowercase letters: `true` or `false`.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "points": 1,
   "incorrectPoints": 0,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Multiple Choice"
     },
     {
      "name": "Content",
      "value": "Boolean"
     },
     {
      "name": "Programming Language",
      "value": "C++"
     },
     {
      "name": "Category",
      "value": "Variables"
     }
    ],
    "files": [
     "code/fundamentals/variableval.cpp",
     "code/fundamentals/boolean.cpp"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/fundamentals/variableval.cpp"
     }
    ]
   },
   "bloomsObjectiveLevel": "2",
   "learningObjectives": "Understand four basic data types: integers (ints), floats, boolean, and strings"
  }
 },
 {
  "type": "parsons-puzzle",
  "taskId": "parsons-puzzle-384100098",
  "source": {
   "name": "C++ Strings",
   "showName": true,
   "instructions": "Select the correct line of code to declare and assign the `var` variable. Drag your selected answer to the highlighted yellow space below. Then click `Check It!`.",
   "initial": "string var = \"this is a string\";\nstring var = 'this is a string'; #distractor\nString var = \"this is a string\"; #distractor",
   "options": "{\n  \"sortableId\": \"sortable\",\n  \"trashId\": \"sortableTrash\"\n}",
   "grader": "1",
   "guidance": "In C++, `string` must be in lowercase. The string must also be surrounded by double quotation marks `\"`.\n",
   "showGuidanceAfterResponse": true,
   "points": 1,
   "oneTimeTest": false,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Parsons Puzzle"
     },
     {
      "name": "Content",
      "value": "Strings"
     },
     {
      "name": "Programming Language",
      "value": "C++"
     },
     {
      "name": "Category",
      "value": "Variables"
     }
    ],
    "files": [
     "code/fundamentals/string.cpp",
     "code/fundamentals/variableval.cpp"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/fundamentals/string.cpp"
     }
    ]
   },
   "bloomsObjectiveLevel": "3",
   "learningObjectives": "Understand four basic data types: integers (ints), floats, boolean, and strings"
  }
 },
 {
  "type": "multiple-choice",
  "taskId": "multiple-choice-950845008",
  "source": {
   "name": "C++ Declaring Variables",
   "showName": true,
   "instructions": "Which of the following code snippets contains correct variable declarations?",
   "multipleResponse": false,
   "answers": [
    {
     "_id": "27918912-b574-ab41-5bfc-89fc6c37793a",
     "correct": false,
     "answer": "```c++\nint var;\nstring var;\n```"
    },
    {
     "_id": "17c83daa-bd5e-2383-65bf-163f2c66512b",
     "correct": false,
     "answer": "```c++\nstring var;\nstring var;\n```"
    },
    {
     "_id": "8c16fcbc-3162-6667-cfc5-7aab31e91404",
     "correct": false,
     "answer": "```c++\nstring var;\nint var 2;\n```"
    },
    {
     "_id": "255b602d-a104-b9df-e3b4-ffc274518ab6",
     "correct": true,
     "answer": "```c++\nstring var;\nint Var;\n```"
    }
   ],
   "guidance": "C++ does not allow different variables to have the same name - regardless of data type.\n\nAdditionally, C++ does not allow spaces in variable names - either use `camelCase` or `snake_case` to separate words.\n\nSince C++ variables are case sensitive, `var` and `Var` are different variables.",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "points": 1,
   "incorrectPoints": 0,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Multiple Choice"
     },
     {
      "name": "Content",
      "value": "Declaring Variables"
     },
     {
      "name": "Programming Language",
      "value": "C++"
     },
     {
      "name": "Category",
      "value": "Variables"
     }
    ],
    "files": [
     "code/fundamentals/variableval.cpp",
     "code/fundamentals/variabledecl.cpp"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/fundamentals/variableval.cpp"
     }
    ]
   },
   "bloomsObjectiveLevel": "2",
   "learningObjectives": "Assign/overwrite a value to a variable"
  }
 },
 {
  "type": "parsons-puzzle",
  "taskId": "parsons-puzzle-2436518807",
  "source": {
   "name": "C++ Declaring, Initializing, and Assigning Variables",
   "showName": true,
   "instructions": "Construct a program that initializes the variable <code>my_var</code> to 5 and prints it out. \n\nThen, re-assigns <code>my_var</code> to 10 and prints it out.\n\nThe output of the code you are constructing looks like:\n```c++\n5\n10\n```\n\n**You will not need to use all of the blocks.**",
   "initial": "int my_var = 5;\ncout << my_var << endl;\nmy_var = 10;\ncout << my_var << endl;\nint my_var = 10; #distractor\ndouble my_var = 5; #distractor\nmy_var = 5; #distractor\nmy_var = \"10\"; #distractor",
   "options": "{\n  \"sortableId\": \"sortable\",\n  \"trashId\": \"sortableTrash\"\n}",
   "grader": "1",
   "guidance": "You will use an `int` instead of a double since 5 and 10 are whole numbers. Additionally, if you use `double` it would print out `5.0` and `10.0` by default.\n\nYou cannot assign a String (`\"10\"`) to an `int`.\n\nYou do not need to re-declare when you reassign (`int my_variable = 10`).\n\n```c++\nint my_var = 5;\ncout << my_var << endl;\nmy_var = 10;\ncout << my_var << endl;\n```",
   "showGuidanceAfterResponse": true,
   "points": 1,
   "oneTimeTest": false,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Parsons Puzzle"
     }
    ],
    "files": [
     "code/fundamentals/variableval.cpp"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/fundamentals/variableval.cpp"
     }
    ]
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": ""
  }
 },
 {
  "type": "multiple-choice",
  "taskId": "multiple-choice-4248538892",
  "source": {
   "name": "C++ Variable Names",
   "showName": true,
   "instructions": "Which of the following is a correct variable name?",
   "multipleResponse": false,
   "answers": [
    {
     "_id": "ef46cb47-6ae1-7b7e-bb79-b3cb3ad1dd30",
     "correct": false,
     "answer": "1st_variable"
    },
    {
     "_id": "67ace8a0-d1b6-37fb-bb45-cef875ec79db",
     "correct": true,
     "answer": "variable_1"
    },
    {
     "_id": "6a2fea69-8153-98d1-8309-156570dcebae",
     "correct": false,
     "answer": "variable_1!"
    },
    {
     "_id": "1798cf41-1267-3074-b033-4e6356554505",
     "correct": false,
     "answer": "-1-variable-"
    }
   ],
   "guidance": "Here are the basic rules for variable names: \n1. Start with a letter, dollar sign, or underscore\n2. Remainder of variable name is letters, numbers, or underscores\n3. Cannot use a C++ keyword\n4. Variables are case sensitive",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "points": 1,
   "incorrectPoints": 0,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Multiple Choice"
     },
     {
      "name": "Content",
      "value": "Naming Variables"
     },
     {
      "name": "Programming Language",
      "value": "C++"
     },
     {
      "name": "Category",
      "value": "Variables"
     }
    ],
    "files": [
     "code/fundamentals/variableval.cpp"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/fundamentals/variableval.cpp"
     }
    ]
   },
   "bloomsObjectiveLevel": "1",
   "learningObjectives": "Understand the rules of naming a variable"
  }
 },
 {
  "type": "multiple-choice",
  "taskId": "multiple-choice-3992091061",
  "source": {
   "name": "C++ Data Types",
   "showName": true,
   "instructions": "What are the four basic data types used in C++?",
   "multipleResponse": true,
   "answers": [
    {
     "_id": "6b61f606-a123-10dd-489b-faf434c1bd1a",
     "correct": false,
     "answer": "short"
    },
    {
     "_id": "2764deda-4e76-fa7f-c3ec-5b0ac70886dc",
     "correct": true,
     "answer": "int"
    },
    {
     "_id": "1e312e19-e8b2-fc73-a938-ab5479b587d4",
     "correct": false,
     "answer": "long"
    },
    {
     "_id": "762fbca7-5894-2ff9-a70e-86e3c01f21dc",
     "correct": true,
     "answer": "double"
    },
    {
     "_id": "2c15f088-64a7-37ec-22b0-bbcac9ed063c",
     "correct": false,
     "answer": "letter"
    },
    {
     "_id": "cb7acb81-1c8d-82bd-1a6e-a31fc30a0f98",
     "correct": false,
     "answer": "number"
    },
    {
     "_id": "2f0c8126-9a53-98df-9017-a2ef413723d7",
     "correct": true,
     "answer": "string"
    },
    {
     "_id": "fc02caa7-5b54-e879-bc59-a8824f7377a7",
     "correct": true,
     "answer": "boolean"
    },
    {
     "_id": "a9c6d9c1-c36e-25ef-797c-364ba83256c1",
     "correct": false,
     "answer": "bits"
    }
   ],
   "guidance": "The four basic data types that you have learned so far are:\n- int - integers (no decimal)\n- double - numbers with a decimal\n- boolean - true or false\n- string - collections of letters, numbers, and symbols",
   "showGuidanceAfterResponse": true,
   "showExpectedAnswer": true,
   "points": 1,
   "incorrectPoints": 0,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Multiple Choice"
     },
     {
      "name": "Content",
      "value": "Data Types"
     },
     {
      "name": "Programming Language",
      "value": "C++"
     },
     {
      "name": "Category",
      "value": "Variables"
     }
    ],
    "files": [
     "code/fundamentals/variableval.cpp"
    ],
    "opened": []
   },
   "bloomsObjectiveLevel": "1",
   "learningObjectives": "Understand four basic data types: integers (ints), floats, boolean, and strings"
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-2157437958",
  "source": {
   "name": "C++ Chat Greeting",
   "showName": true,
   "instructions": "Submit your code when you are ready.",
   "command": "./code/fundamentals/labchallenge",
   "preExecuteCommand": "g++ code/fundamentals/labchallenge.cpp -o code/fundamentals/labchallenge",
   "guidance": "Here are two possible solutions to this lab:\n```c++\ncout << greeting << \" Today is \" << dayOfWeek << \", \" << month << \" \" << day << \".\" << endl;\ncout << \"The current wait time is \" << currentWaitMinutes << \" minutes.\" << endl;\n```\n```\nc++cout << greeting;\ncout << \" Today is \";\ncout << dayOfWeek;\ncout << \", \";\ncout << month;\ncout << \" \";\ncout << day;\ncout << \".\" << endl;\ncout << \"The current wait time is \";\ncout << currentWaitMinutes;\ncout << \" minutes.\" << endl;\n```",
   "showGuidanceAfterResponse": true,
   "points": 1,
   "oneTimeTest": false,
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "showExpectedAnswer": true,
   "sequence": [
    {
     "arguments": "Hello! Monday July 4 9",
     "input": "",
     "output": "Hello! Today is Monday, July 4.\nThe current wait time is 9 minutes.",
     "showFeedback": false,
     "feedback": ""
    },
    {
     "arguments": "Howdy! Monday May 5 19",
     "input": "",
     "output": "Howdy! Today is Monday, May 5.\nThe current wait time is 19 minutes.",
     "showFeedback": false,
     "feedback": ""
    },
    {
     "arguments": "Greetings! Wednesday May 18 1",
     "input": "",
     "output": "Greetings! Today is Wednesday, May 18.\nThe current wait time is 1 minutes.",
     "showFeedback": false,
     "feedback": ""
    },
    {
     "arguments": "Hi, banana pear 52 -4",
     "input": "",
     "output": "Hi, Today is banana, pear 52.\nThe current wait time is -4 minutes.",
     "showFeedback": false,
     "feedback": ""
    }
   ],
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Standard Code Test"
     },
     {
      "name": "Content",
      "value": "Output and Newline"
     },
     {
      "name": "Programming Language",
      "value": "C++"
     },
     {
      "name": "Category",
      "value": "Printing"
     }
    ],
    "files": [
     "code/fundamentals/labchallenge.cpp",
     "code/fundamentals/exercise1.cpp"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/fundamentals/labchallenge.cpp"
     }
    ]
   },
   "bloomsObjectiveLevel": "6",
   "learningObjectives": "Use the cout command to write text to the console &  Add a newline character by using the endl command"
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-295500519",
  "source": {
   "name": "C++ Fundamentals: Exercise 1",
   "showName": true,
   "instructions": "Submit your code when you are ready.",
   "command": "./code/fundamentals/exercise1",
   "preExecuteCommand": "g++ code/fundamentals/exercise1.cpp -o code/fundamentals/exercise1",
   "guidance": "Here is one solution:\n```c++\nbool my_bool = true;\ncout << my_bool << endl;\nmy_bool = test;\ncout << my_bool << endl;\n```\nAlternatively, you can write your code without the `<< endl` commands: \n```c++\nbool my_bool = true;\ncout << my_bool;\nmy_bool = test;\ncout << my_bool;\n```\nLastly, you can also change `true` to `1`: \n```c++\nbool my_bool = 1;\ncout << my_bool;\nmy_bool = test;\ncout << my_bool;\n```",
   "showGuidanceAfterResponse": true,
   "points": 1,
   "oneTimeTest": false,
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "showExpectedAnswer": true,
   "sequence": [
    {
     "arguments": "1",
     "input": "",
     "output": "1\n1",
     "showFeedback": false,
     "feedback": ""
    },
    {
     "arguments": "0",
     "input": "",
     "output": "1\n0",
     "showFeedback": false,
     "feedback": ""
    }
   ],
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Standard Code Test"
     },
     {
      "name": "Content",
      "value": "Boolean"
     },
     {
      "name": "Programming Language",
      "value": "C++"
     },
     {
      "name": "Category",
      "value": "Printing and Variables"
     }
    ],
    "files": [
     "code/fundamentals/exercise1.cpp",
     "code/fundamentals/exercise2.cpp"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/fundamentals/exercise1.cpp"
     }
    ]
   },
   "bloomsObjectiveLevel": "6",
   "learningObjectives": "Assign/overwrite a value to a variable & Use the cout command to write text to the console"
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-2547360760",
  "source": {
   "name": "C++ Fundamentals: Exercise 2",
   "showName": true,
   "instructions": "Submit your code when you are ready.",
   "command": "./code/fundamentals/exercise2",
   "preExecuteCommand": "g++ code/fundamentals/exercise2.cpp -o code/fundamentals/exercise2",
   "guidance": "You can do the declaration and initialization on the same line:\n```c++\nint my_int = first_num;\ncout << my_int << endl;\nmy_int = second_num;\ncout << my_int << endl;\nmy_int = third_num;\ncout << my_int << endl;\n```\nYou can also write the code without using `<< endl`.",
   "showGuidanceAfterResponse": true,
   "points": 1,
   "oneTimeTest": false,
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "showExpectedAnswer": true,
   "sequence": [
    {
     "arguments": "1 2 3",
     "input": "",
     "output": "1\n2\n3",
     "showFeedback": false,
     "feedback": ""
    },
    {
     "arguments": "-3 -2 -1",
     "input": "",
     "output": "-3\n-2\n-1",
     "showFeedback": false,
     "feedback": ""
    },
    {
     "arguments": "5 99 -2",
     "input": "",
     "output": "5\n99\n-2",
     "showFeedback": false,
     "feedback": ""
    }
   ],
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Standard Code Test"
     },
     {
      "name": "Content",
      "value": "Integers"
     },
     {
      "name": "Programming Language",
      "value": "C++"
     },
     {
      "name": "Category",
      "value": "Printing and Variables"
     }
    ],
    "files": [
     "code/fundamentals/exercise2.cpp",
     "code/fundamentals/exercise1.cpp"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/fundamentals/exercise2.cpp"
     }
    ]
   },
   "bloomsObjectiveLevel": "6",
   "learningObjectives": "Assign/overwrite a value to a variable & Use the cout command to write text to the console"
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-784241532",
  "source": {
   "name": "C++ Fundamentals: Exercise 3",
   "showName": true,
   "instructions": "Submit your code when you are ready.",
   "command": "./code/fundamentals/exercise3",
   "preExecuteCommand": "g++ code/fundamentals/exercise3.cpp -o code/fundamentals/exercise3",
   "guidance": "Because the string variables are already declared and initialized, you simply need to access them. You need to use `<< endl` to ensure the newlines are printed after each line.\n```c++\ncout << line1 << endl;\ncout << line2 << endl;\n```\n\nYou could use the `<< endl` commands separately if you wanted:\n```c++\ncout << line1;\ncout << endl;\ncout << line2;\ncout << endl;\n```",
   "showGuidanceAfterResponse": true,
   "points": 1,
   "oneTimeTest": false,
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "showExpectedAnswer": true,
   "sequence": [
    {
     "arguments": "Hi Bye",
     "input": "",
     "output": "Hi\nBye\n",
     "showFeedback": false,
     "feedback": ""
    },
    {
     "arguments": "1 2",
     "input": "",
     "output": "1\n2\n",
     "showFeedback": false,
     "feedback": ""
    },
    {
     "arguments": "true false",
     "input": "",
     "output": "true\nfalse\n",
     "showFeedback": false,
     "feedback": ""
    }
   ],
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Standard Code Test"
     },
     {
      "name": "Content",
      "value": "Strings"
     },
     {
      "name": "Programming Language",
      "value": "C++"
     },
     {
      "name": "Category",
      "value": "Printing and Variables"
     }
    ],
    "files": [
     "code/fundamentals/exercise3.cpp",
     "code/fundamentals/exercise1.cpp",
     "code/fundamentals/exercise2.cpp"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/fundamentals/exercise3.cpp"
     }
    ]
   },
   "bloomsObjectiveLevel": "6",
   "learningObjectives": "Assign/overwrite a value to a variable & Use the cout and endl commands to write text to the console"
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-2314242167",
  "source": {
   "name": "C++ Fundamentals: Exercise 4",
   "showName": true,
   "instructions": "Submit your code when you are ready.",
   "command": "./code/fundamentals/exercise4",
   "preExecuteCommand": "g++ code/fundamentals/exercise4.cpp -o code/fundamentals/exercise4",
   "guidance": "You can separate your declaration and initialization onto two lines.\n\n```c++\ndouble my_double = 3.14;\ncout << my_double << endl;\nmy_double = number; \ncout << my_double << endl;\n```\n\n**You would have gotten credit for excluding the `<< endl` commands. However, since spacing matters for the presentation of doubles, you should get into the habit of including newlines in your code.**",
   "showGuidanceAfterResponse": true,
   "points": 1,
   "oneTimeTest": false,
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "matchSubstring": false,
    "timeout": 30
   },
   "showExpectedAnswer": true,
   "sequence": [
    {
     "arguments": "-9.1",
     "input": "",
     "output": "3.14\n-9.1",
     "showFeedback": false,
     "feedback": ""
    },
    {
     "arguments": "33.22",
     "input": "",
     "output": "3.14\n33.22",
     "showFeedback": false,
     "feedback": ""
    }
   ],
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Standard Code Test"
     },
     {
      "name": "Content",
      "value": "Doubles"
     },
     {
      "name": "Programming Language",
      "value": "C++"
     },
     {
      "name": "Category",
      "value": "Printing and Variables"
     }
    ],
    "files": [
     "code/fundamentals/exercise4.cpp",
     "code/fundamentals/exercise1.cpp"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/fundamentals/exercise4.cpp"
     }
    ]
   },
   "bloomsObjectiveLevel": "6",
   "learningObjectives": "Assign/overwrite a value to a variable & Use the cout command to write text to the console"
  }
 },
 {
  "type": "test",
  "taskId": "test-1005686765",
  "source": {
   "name": "C++ Fundamentals: Exercise 5",
   "showName": true,
   "instructions": "Use **two** `cout` statements to write the following string:\n`Okay, it is time to learn about operators.`",
   "command": "bash .guides/secure/fundamentals/exercise5.sh",
   "arePartialPointsAllowed": false,
   "timeoutSeconds": 40,
   "guidance": "It does not matter where you split up the string...but the first `cout` statement **should not** use the `<< endl` command. The `<< endl` command for the second `cout` statement is optional. Here is one solution below:\n```c++\ncout << \"Okay, it is time to \";\ncout << \"learn about operators.\" << endl;\n```",
   "showGuidanceAfterResponse": true,
   "points": 1,
   "oneTimeTest": false,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Advanced Code Test"
     },
     {
      "name": "Content",
      "value": "Output"
     },
     {
      "name": "Programming Language",
      "value": "C++"
     },
     {
      "name": "Category",
      "value": "Printing"
     }
    ],
    "files": [
     "code/fundamentals/exercise5.cpp",
     "code/fundamentals/exercise1.cpp",
     "code/fundamentals/exercise4.cpp"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/fundamentals/exercise5.cpp"
     }
    ]
   },
   "bloomsObjectiveLevel": "6",
   "learningObjectives": "Use the cout command to write text to the console"
  }
 },
 {
  "type": "parsons-puzzle",
  "taskId": "parsons-puzzle-621188575",
  "source": {
   "name": "C++ Programming Math",
   "showName": true,
   "instructions": "Construct a program below such that C++ reaches the same answer as a normal calculator would. You will **NOT** use all the blocks.",
   "initial": "double a = 2;\nSystem.out.println(5/a);\nint a = 2; #distractor\nSystem.out.println( (double) (5/a) ); #distractor",
   "options": "{\n  \"sortableId\": \"sortable\",\n  \"trashId\" : \"sortableTrash\"\n}",
   "grader": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "points": 1,
   "oneTimeTest": false,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Parsons Puzzle"
     }
    ],
    "files": [
     "code/fundamentals/exercise5.cpp"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/fundamentals/exercise5.cpp"
     }
    ]
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": ""
  }
 },
 {
  "type": "multiple-choice",
  "taskId": "multiple-choice-2728036190",
  "source": {
   "name": "C++ Modulo",
   "showName": true,
   "instructions": "Which of the following is **NOT** correct?",
   "multipleResponse": false,
   "answers": [
    {
     "_id": "d37da241-38d3-7265-7652-0b52199c7fc0",
     "correct": false,
     "answer": "6 % 4 = 2"
    },
    {
     "_id": "ec587023-6f42-fa1a-b70e-127c852d568c",
     "correct": true,
     "answer": "1 % 0 = 1"
    },
    {
     "_id": "d9b4379e-f2ad-91a6-4937-48ebd664b66a",
     "correct": false,
     "answer": "0 % 2 = 0"
    },
    {
     "_id": "e04bf66f-72d1-5550-d91f-cac662282b5e",
     "correct": false,
     "answer": "15 % 4 = 3"
    }
   ],
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "points": 1,
   "incorrectPoints": 0,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Multiple Choice"
     }
    ],
    "files": [
     "code/fundamentals/exercise5.cpp"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "code/fundamentals/exercise5.cpp"
     }
    ]
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": ""
  }
 }
]